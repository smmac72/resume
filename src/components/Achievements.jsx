import React, { useState, useEffect } from 'react';
import commandProcessor from '../utils/commandProcessor';

const Achievements = ({ language }) => {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  const [achievements, setAchievements] = useState(commandProcessor.getAchievements());
  const [showUnlockAnimation, setShowUnlockAnimation] = useState(false);
  const totalAchievements = 8;

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–∏–ø –∏ –∏–∫–æ–Ω–∫—É
  const allAchievements = [
    {
      type: 'any_file',
      icon: 'üìÑ',
    },
    {
      type: 'image_opened',
      icon: 'üñºÔ∏è',
    },
    {
      type: 'link_opened',
      icon: 'üåê',
    },
    {
      type: 'timeline_opened',
      icon: 'üìÖ',
    },
    {
      type: 'music_played',
      icon: 'üéµ',
    },
    {
      type: 'language_changed',
      icon: 'üåç',
    },
    {
      type: 'logins_found',
      icon: 'üîë',
    },
    {
      type: 'secret_server_access',
      icon: 'üïµÔ∏è',
    },
  ];

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  useEffect(() => {
    if (commandProcessor.achievementsUnlocked && achievements.length > 0) {
      setShowUnlockAnimation(true);
      commandProcessor.achievementsUnlocked = false;
      const timer = setTimeout(() => {
        setShowUnlockAnimation(false);
      }, 3000);
      return () => clearTimeout(timer);
    }
  }, [achievements.length]);

  // –†–µ–Ω–¥–µ—Ä —Å–µ—Ç–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: –∫–∞–∂–¥—ã–π –±–æ–∫—Å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∫–æ–Ω–∫—É –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  const renderAchievementGrid = () => {
    return (
      <div className="achievements-grid">
        {allAchievements.map((achievement) => {
          const achieved = achievements.some(a => a.type === achievement.type);
          return (
            <div
              key={achievement.type}
              className={`achievement-icon-container ${achieved ? 'achieved' : 'locked'}`}
            >
              <div className="achievement-icon">{achievement.icon}</div>
            </div>
          );
        })}
      </div>
    );
  };

  // –£—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
  if (achievements.length === 0) {
    return (
      <>
        <div className="achievements-header-line">
          {language === 'ru' ? '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è' : 'Achievements'}: 0/{totalAchievements}
        </div>
        <div className="achievements-locked">
          {language === 'ru' ? '–î–û–°–¢–ò–ñ–ï–ù–ò–Ø –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–´' : 'ACHIEVEMENTS LOCKED'}
        </div>
      </>
    );
  }

  if (showUnlockAnimation) {
    return (
      <>
        <div className="achievements-header-line">
          {language === 'ru' ? '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è' : 'Achievements'}: {achievements.length}/{totalAchievements}
        </div>
        <div className="achievements-unlocked-animation">
          {language === 'ru' ? '–î–û–°–¢–ò–ñ–ï–ù–ò–Ø –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ê–ù–´' : 'ACHIEVEMENTS UNLOCKED'}
        </div>
      </>
    );
  }

  return (
    <>
      <div className="achievements-header-line">
        {language === 'ru' ? '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è' : 'Achievements'}: {achievements.length}/{totalAchievements}
      </div>
      {renderAchievementGrid()}
    </>
  );
};

export default Achievements;
